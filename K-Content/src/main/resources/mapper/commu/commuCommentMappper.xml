<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
        namespace="com.example.myapp.user.commucomment.dao.ICommuCommentRepository">

    <!-- 댓글 입력 -->
    <insert id="insertCommuComment"
            parameterType="com.example.myapp.user.commucomment.model.CommuComment">
        insert into tb_commu_comment (commu_comment_id,
                                      commu_comment_cntnt,
                                      commu_comment_regist_date,
                                      commu_comment_ref_id,
                                      commu_comment_mber_id,
                                      commu_comment_commu_id)
        values (TB_COMMU_COMMENT_SEQ.NEXTVAL,
                #{commuComment.commuCommentCntnt},
                to_char(sysdate, 'yyyy.mm.dd hh24:mi'),
                #{commuComment.commuCommentRefId},
                #{commuComment.commuCommentMberId},
                #{commuComment.commuCommentCommuId})

    </insert>


    <!-- 댓글 수정 -->
    <!--	<update id="updateCommuComment"-->
    <!--		parameterType="com.example.myapp.user.commucomment.model.CommuComment">-->
    <!--		UPDATE TB_COMMU_COMMENT-->
    <!--		SET-->
    <!--		COMMU_COMMENT_CNTNT =-->
    <!--		#{commuCommentCntnt},-->
    <!--		COMMU_COMMENT_UPDATE_DATE =-->
    <!--		#{commuCommentUpdateDate}-->
    <!--		WHERE COMMU_COMMENT_ID =-->
    <!--		#{commuCommentId}-->
    <!--	</update>-->

    <delete id="deleteCommuCommentRefAll"
            parameterType="int">
        DELETE
        FROM TB_COMMU_COMMENT
        WHERE COMMU_COMMENT_REF_ID = #{commentId}
    </delete>

    <delete id="deleteCommuComment"
            parameterType="int">
        DELETE
        FROM TB_COMMU_COMMENT
        WHERE COMMU_COMMENT_ID = #{commentId}
    </delete>

    <!-- 댓글 순서 업데이트 -->
    <!--	<update id="updateCommuCommentOrderAndDepth">-->
    <!--		UPDATE TB_COMMU_COMMENT-->
    <!--		SET-->
    <!--		COMMU_COMMENT_DEPTH =-->
    <!--		#{commuCommentDepth},-->
    <!--		COMMU_COMMENT_ORDER = #{commuCommentOrder}-->
    <!--		WHERE-->
    <!--		COMMU_COMMENT_REF_ID = #{commuCommentRefId}-->
    <!--	</update>-->

    <!--게시글 ID에 따른 댓글 조회 -->

    <select id="selectCommuCommentsByCommuCommentCommuId"
            parameterType="int"
            resultType="com.example.myapp.user.commucomment.model.CommuComment">

        SELECT *
        FROM TB_COMMU_COMMENT
        WHERE COMMU_COMMENT_COMMU_ID = #{COMMUID}
        ORDER BY commu_comment_regist_date

    </select>


    <!--특정 ID를 가진 댓글의 정보를 조회 -->
    <select id="selectCommuCommentById" parameterType="int"
            resultType="com.example.myapp.user.commucomment.model.CommuComment">
        SELECT *
        FROM TB_COMMU_COMMENT
        WHERE COMMU_COMMENT_ID =
              #{commuCommentId}
    </select>

    <!-- 게시글의 마지막 댓글 순서를 가져오기 -->
    <select id="getLastCommuCommentOrder" resultType="int"
            parameterType="int">
        SELECT COALESCE(MAX(COMMU_COMMENT_ORDER), 0)
        FROM TB_COMMU_COMMENT
        WHERE COMMU_COMMENT_COMMU_ID = #{commuCommentCommuId}
    </select>

    <!-- 원본 댓글에 대한 마지막 대댓글의 순서를 가져오기 -->
    <select id="getLastReplyOrder" resultType="int"
            parameterType="int">
        SELECT COALESCE(MAX(COMMU_COMMENT_ORDER), 0)
        FROM TB_COMMU_COMMENT
        WHERE COMMU_COMMENT_REF_ID = #{commuCommentRefId}
    </select>


</mapper>
