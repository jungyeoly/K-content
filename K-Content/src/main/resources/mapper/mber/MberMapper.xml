<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.myapp.user.mber.dao.IMberRepository">

	<select id="selectMberbyId"
		resultType="com.example.myapp.user.mber.model.Mber">
			<![CDATA[
	          SELECT A.mber_id,
			       A.mber_email,
			       A.mber_pwd,
			       A.mber_name,
			       A.mber_birth,
			       A.mber_phone,
			       A.mber_regist_date,
			       A.mber_update_date,
			       A.mber_gender_code,
			       B1.common_code_dscr AS mber_stat,
			       B2.common_code_val AS mber_role
				FROM tb_mber A
				JOIN tb_common_code B1
				ON A.mber_stat_code = B1.common_code
				JOIN tb_common_code B2
				ON A.mber_role_code = B2.common_code
				WHERE A.mber_id = #{mberId}            
		]]>
	</select>

	<select id="selectMberbyEmail"
		resultType="com.example.myapp.user.mber.model.Mber">
			<![CDATA[
	        SELECT A.mber_id,
			       A.mber_email,
			       A.mber_pwd,
			       A.mber_name,
			       A.mber_birth,
			       A.mber_phone,
			       A.mber_regist_date,
			       A.mber_update_date,
			       A.mber_gender_code,
			       B1.common_code_dscr AS mber_stat,
			       B2.common_code_val AS mber_role
				FROM tb_mber A
				JOIN tb_common_code B1
				ON A.mber_stat_code = B1.common_code
				JOIN tb_common_code B2
				ON A.mber_role_code = B2.common_code
				WHERE A.mber_email = #{mberEmail}
			]]>
	</select>

	<select id="selectMberbyIdEmail"
		resultType="com.example.myapp.user.mber.model.Mber">
		<![CDATA[
		     SELECT A.mber_id,
			       A.mber_email,
			       A.mber_pwd,
			       A.mber_name,
			       A.mber_birth,
			       A.mber_phone,
			       A.mber_regist_date,
			       A.mber_update_date,
			       A.mber_gender_code,
			       B1.common_code_dscr AS mber_stat,
			       B2.common_code_val AS mber_role
				FROM tb_mber A
				JOIN tb_common_code B1
				ON A.mber_stat_code = B1.common_code
				JOIN tb_common_code B2
				ON A.mber_role_code = B2.common_code
				WHERE mber_id=#{mberId} AND mber_email= #{mberEmail}
		]]>
	</select>

	<select id="selectMberList" resultType="com.example.myapp.user.mber.model.Mber">
	  <![CDATA[
SELECT rn, mber_id, mber_email, mber_pwd, mber_name, mber_birth, mber_phone, mber_regist_date, mber_update_date, mber_gender_code, mber_stat, mber_role
FROM (
    SELECT rownum rn, mber_id, mber_email, mber_pwd, mber_name, mber_birth, mber_phone, mber_regist_date, mber_update_date, mber_gender_code, mber_stat, mber_role
    FROM (
        SELECT 
            A.mber_id,
            A.mber_email,
            A.mber_pwd,
            A.mber_name,
            A.mber_birth,
            A.mber_phone,
            A.mber_regist_date,
            A.mber_update_date,
            B1.common_code_dscr AS mber_gender_code, 
            B2.common_code_dscr AS mber_stat,
            B3.common_code_dscr AS mber_role    
        FROM tb_mber A
        JOIN tb_common_code B1
        ON A.mber_gender_code = B1.common_code
        JOIN tb_common_code B2
        ON A.mber_stat_code = B2.common_code
        JOIN tb_common_code B3
        ON A.mber_role_code = B3.common_code
        ORDER BY mber_role, A.mber_regist_date desc, A.mber_id
      )	
    )  WHERE rn between #{start} and #{end}
	  ]]>
	</select>

	<select id="getMberTotalCount"
		resultType="int">
		<![CDATA[
		 	SELECT COUNT(*) FROM tb_mber
		]]>
	</select>
	
	<select id="getActiveMberCount"
		resultType="int">
		<![CDATA[
		    SELECT COUNT(*) FROM tb_mber
        	WHERE mber_stat_code != 'C0201'
		]]>
	</select>

	<insert id="insertMber"
		parameterType="com.example.myapp.user.mber.model.Mber">
	    <![CDATA[
		INSERT INTO tb_mber (mber_id, mber_email, mber_pwd, mber_name, mber_birth, mber_phone, mber_regist_date,
							 mber_update_date, mber_gender_code, mber_stat_code, mber_role_code)
		VALUES (#{mberId}, #{mberEmail}, #{mberPwd}, #{mberName}, #{mberBirth}, #{mberPhone},
				to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss'), null, #{mberGenderCode}, 'C0202', 'C0401')
		]]>
	</insert>

	<update id="updateMber"
		parameterType="com.example.myapp.user.mber.model.Mber">
    <![CDATA[
		UPDATE tb_mber
		SET mber_email = #{mberEmail},
			mber_pwd = #{mberPwd},
			mber_name = #{mberName},
			mber_birth = #{mberBirth},
			mber_phone = #{mberPhone},
			mber_gender_code = #{mberGenderCode},
			mber_update_date = to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss')
		WHERE mber_id = #{mberId}
		]]>
	</update>

	<update id="deleteMber"
		parameterType="com.example.myapp.user.mber.model.Mber">
    <![CDATA[
		UPDATE tb_mber
		SET mber_stat_code = 'C0201'
		WHERE mber_id = #{mberId}
		]]>
	</update>

	<select id="maskMberId" parameterType="String"
		resultType="String">
    <![CDATA[
		SELECT CONCAT(SUBSTR(mber_id, 1, 3), '*****')
		FROM tb_mber
		WHERE mber_email = #{mberEmail}
		]]>
	</select>

	<select id="isMberId" parameterType="String"
		resultType="boolean">
    <![CDATA[
		SELECT CASE WHEN COUNT(*) = 1 THEN 1 ELSE 0 END AS isMberId
		FROM tb_mber
		WHERE mber_id = #{mberId}
		]]>
	</select>

	<select id="isMberEmail" parameterType="String"
		resultType="boolean">
    <![CDATA[
		SELECT CASE WHEN COUNT(*) = 1 THEN 1 ELSE 0 END AS isMberEmail
		FROM tb_mber
		WHERE mber_email = #{mberEmail}
		]]>
	</select>

	<update id="changeMberStatus" parameterType="map">
    <![CDATA[
	    UPDATE tb_mber
        SET mber_stat_code = #{newStatus}
        WHERE mber_id = #{mberId}
		]]>
	</update>

	<select id="searchMber" resultType="com.example.myapp.user.mber.model.Mber">
	    <![CDATA[
	    select rn, mber_id, mber_email, mber_pwd, mber_name, mber_birth, mber_phone, mber_regist_date, mber_update_date, mber_gender_code, mber_stat, mber_role
		from(
		    SELECT
			    	rownum rn,
			        A.mber_id,
			        A.mber_email,
			        A.mber_pwd,
			        A.mber_name,
			        A.mber_birth,
			        A.mber_phone,
			        A.mber_regist_date,
			        A.mber_update_date,
			        B1.common_code_dscr AS mber_gender_code,
			        B2.common_code_dscr AS mber_stat,
			        B3.common_code_dscr AS mber_role
			    FROM tb_mber A
			    JOIN tb_common_code B1 ON A.mber_gender_code = B1.common_code
			    JOIN tb_common_code B2 ON A.mber_stat_code = B2.common_code
			    JOIN tb_common_code B3 ON A.mber_role_code = B3.common_code
			    WHERE 
			        (
			            (#{findType} IS NULL) OR
			            (
			                (#{findType} = '1' AND INSTR(A.mber_name, #{findKeyword}) > 0) OR
			                (#{findType} = '2' AND INSTR(A.mber_id, #{findKeyword}) > 0) OR
			                (#{findType} = '3' AND INSTR(A.mber_email, #{findKeyword}) > 0) OR
			                (#{findType} = '4' AND INSTR(A.mber_phone, #{findKeyword}) > 0)
			            )
			        )
		        ORDER BY A.mber_regist_date DESC, A.mber_id
		)
		where rn between #{start} and #{end}
		order by rn
	    ]]>
	</select>
	
	<select id="cntSeach" resultType="int">
     <![CDATA[
		SELECT count(*)
		FROM tb_mber A
		JOIN tb_common_code B1 ON A.mber_gender_code = B1.common_code
		JOIN tb_common_code B2 ON A.mber_stat_code = B2.common_code
		JOIN tb_common_code B3 ON A.mber_role_code = B3.common_code
		WHERE 
		    (
		        (#{findType} IS NULL) OR
	            (
	                (#{findType} = '1' AND INSTR(A.mber_name, #{findKeyword}) > 0) OR
	                (#{findType} = '2' AND INSTR(A.mber_id, #{findKeyword}) > 0) OR
	                (#{findType} = '3' AND INSTR(A.mber_email, #{findKeyword}) > 0) OR
	                (#{findType} = '4' AND INSTR(A.mber_phone, #{findKeyword}) > 0)
	            )
		    )
   ]]>
	</select>
	
	<select id="getGenderStat" resultType="map">
    <![CDATA[
		SELECT B1.common_code_dscr AS gender, COUNT(*) AS count
	    FROM tb_mber A
	    JOIN tb_common_code B1 ON A.mber_gender_code = B1.common_code
	    WHERE A.mber_stat_code != 'C0201'
	    GROUP BY B1.common_code_dscr
    ]]>
	</select>
	
	<select id="getSignupStat" resultType="map">
    <![CDATA[
		SELECT TO_CHAR(TO_DATE(mber_regist_date, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD') AS signup_date, COUNT(*) AS signup_count
		FROM tb_mber
		WHERE TO_DATE(mber_regist_date, 'YYYY-MM-DD HH24:MI:SS') >= TRUNC(SYSDATE) - 9
		GROUP BY TO_CHAR(TO_DATE(mber_regist_date, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD')
		ORDER BY TO_CHAR(TO_DATE(mber_regist_date, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD')
    ]]>
</select>

</mapper>